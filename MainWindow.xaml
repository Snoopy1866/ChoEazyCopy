<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:local="clr-namespace:ChoEazyCopy"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:Properties="clr-namespace:ChoEazyCopy.Properties"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"   
    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    x:Class="ChoEazyCopy.MainWindow"
    Title="ChoEazyCopy - Cinchoo Inc. - 简体中文版"
    Height="600"
    Width="950"
    MinHeight="400"
    MinWidth="500"
    AllowDrop="True"
    Closed="Window_Closed"
    x:Name="ChoEazyCopyWindow"
    BorderBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"
    TitleCaps="False"
    ResizeMode="CanResizeWithGrip"
    Loaded="Window_Loaded" Icon="App.ico" Closing="Window_Closing">
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Controls:ToggleSwitch Margin="10, 0, 0, 0" Foreground="LightYellow" FontSize="16" ToolTip="记住窗口位置/大小"
                                   IsChecked="{Binding RememberWindowSizeAndPosition}"
                                   />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Button x:Name="btnApplicationCmds" ToolTip="应用程序命令" Click="btnApplicationCmds_Click"  >
                <Image Source="{iconPacks:FontAwesomeImage Kind=CogSolid}" />
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="mnuLaunchNewInstance" Header="启动新实例" Click="mnuLaunchNewInstance_Click" >
                            <MenuItem.Icon>
                                <Image Source="Resources/OpenNewWindow.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="mnuRunasAdministrator" Header="以管理员身份运行" Click="mnuRunasAdministrator_Click" >
                            <MenuItem.Icon>
                                <Image Source="Resources/Security.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="mnuRegisterShellExtensions" Header="注册Shell扩展" Click="mnuRegisterShellExtensions_Click">
                            <MenuItem.Icon>
                                <Image Source="Resources/Registry.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="mnuUnregisterShellExtensions" Header="取消注册Shell扩展" Click="mnuUnregisterShellExtensions_Click" >
                            <MenuItem.Icon>
                                <Image Source="Resources/RemoveRegistry.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator></Separator>
                        <MenuItem x:Name="mnuAlwaysOnTop" Header="总是在上层显示" IsCheckable="True" IsChecked="False" Click="mnuAlwaysOnTop_Click">
                            <!--<MenuItem.Icon>
                                <iconPacks:FontAwesome Kind="HandshakeRegular"></iconPacks:FontAwesome>
                            </MenuItem.Icon>-->
                        </MenuItem>
                        <MenuItem x:Name="mnuRunatSystemsStartup" Header="系统启动时运行" IsCheckable="True" 
                                  Click="mnuRunatSystemsStartup_Click">
                            <!--<MenuItem.Icon>
                                <iconPacks:FontAwesome Kind="ShieldAltSolid"></iconPacks:FontAwesome>
                            </MenuItem.Icon>-->
                        </MenuItem>

                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Window.Resources>
        <ContextMenu x:Key="expControlPanelContextMenu">
            <MenuItem x:Name="mnuResetExpander" Header="重置" Click="mnuResetExpander_Click" />
        </ContextMenu>

        <ContextMenu x:Key="TextBoxContextMenu" Background="White">
            <MenuItem Command="ApplicationCommands.Copy">
                <MenuItem.Icon>
                    <Image Source="Resources/Copy.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Cut" >
                <MenuItem.Icon>
                    <Image Source="Resources/Cut.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Paste" >
                <MenuItem.Icon>
                    <Image Source="Resources/Paste.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <Style TargetType="ToolTip">
            <Style.Triggers>
                <Trigger Property="Content"
                 Value="{x:Static sys:String.Empty}">
                    <Setter Property="Visibility"
                    Value="Collapsed" />
                </Trigger>
                <Trigger Property="Content"
                 Value="{x:Null}">
                    <Setter Property="Visibility"
                    Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Background" Value="{Binding ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{Binding ControlForegroundBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="LightSlateGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WaterMarkTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="Bd" SnapsToDevicePixels="True" 
                                  Background="{TemplateBinding Background}" 
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}" >
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <TextBlock x:Name="textBlock"
                               Opacity="0.5"
                               Text="{TemplateBinding Tag}"
                               Padding="2,0,0,0"
                               TextWrapping="Wrap"
                               Visibility="Hidden" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{Binding TextBoxFocusBorderBrush}">
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="textBlock" Value="Visible" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            TargetType="{x:Type TextBlock}"
            x:Key="StatusBarTextBlock">
            <Setter
                Property="TextWrapping"
                Value="NoWrap" />
            <Setter
                Property="TextTrimming"
                Value="CharacterEllipsis" />
            <Setter
                Property="Padding"
                Value="2,0" />
        </Style>
        <local:BoolInverterConverter x:Key="BoolInverterConverter1"/>
        <local:BoolInverterConverter x:Key="BoolInverterConverter2"/>
        <local:BoolToBackgroundColorConverter x:Key="BoolToBackgroundColorConverter1"/>
        <local:BoolToForegroundColorConverter x:Key="BoolToForegroundColorConverter1"/>
        <local:MathConverter x:Key="MathConverter"/>
    </Window.Resources>
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" Margin="5,0,5,5" Width="Auto">
            <StatusBarItem
                VerticalContentAlignment="Top"
                Focusable="False"
                Padding="0">
                <TextBlock
                    Style="{StaticResource StatusBarTextBlock}"
                    x:Name="sbAppStatus"><Run Text="就绪"/></TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="{Binding ControlPanelWidth, Mode=TwoWay}" >
                    <ColumnDefinition.Style>
                        <Style TargetType="{x:Type ColumnDefinition}">
                            <Setter Property="MinWidth" Value="350" />
                            <!-- Default MinHeight -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=expControlPanel, Path=IsExpanded}" Value="False">
                                    <Setter Property="MinWidth" Value="24" />
                                    <!-- MinHeight when Collapsed -->
                                    <Setter Property="MaxWidth" Value="40" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=expControlPanel, Path=IsExpanded}" Value="True">
                                    <Setter Property="MaxWidth" Value="{Binding ElementName=ChoEazyCopyWindow, Path=Width, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE/2 }" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" LastChildFill="true">
                <Ribbon DockPanel.Dock="Top" x:Name="RibbonWin" SelectedIndex="0" Loaded="RibbonWin_Loaded" MinWidth="500" ContextMenu="{x:Null}"
                        Background="{Binding ControlBackgroundBrush}"
                        Foreground="{Binding ControlForegroundBrush}">
                    <Ribbon.ApplicationMenu>
                        <RibbonApplicationMenu Visibility="Collapsed"></RibbonApplicationMenu>
                    </Ribbon.ApplicationMenu>
                    <RibbonTab Header="开始" KeyTip="H" ContextMenu="{x:Null}">
                        <RibbonGroup x:Name="HomeGroup" Header="Action" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnRun" LargeImageSource="Resources\Run.png" Label="运行" KeyTip="R" Click="btnRun_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnStop" SmallImageSource="Resources\Stop.png" Label="停止" KeyTip="T" Click="btnStop_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnClear" SmallImageSource="Resources\Erase.png" Label="清空输出窗口" KeyTip="E" Click="btnClear_Click"  ContextMenu="{x:Null}"/>
                            <RibbonCheckBox x:Name="btnScrollOutput" SmallImageSource="Resources\Scroll.png" Label="滚动输出" KeyTip="L" IsChecked="{Binding ScrollOutput}"  ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                        <RibbonGroup x:Name="FileGroup" Header="File" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnNewFile" LargeImageSource="Resources\NewFile.png" Label="新建" KeyTip="N" Click="btnNewFile_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnOpenFile" SmallImageSource="Resources\OpenFile.png" Label="打开" KeyTip="O" Click="btnOpenFile_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnSaveFile" SmallImageSource="Resources\SaveFile.png" Label="保存" KeyTip="S" Click="btnSaveFile_Click"  ContextMenu="{x:Null}"/>
                            <RibbonButton x:Name="btnSaveAsFile" SmallImageSource="Resources\SaveAsFile.png" Label="另存为" KeyTip="A" Click="btnSaveAsFile_Click"  ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                        <RibbonGroup x:Name="DonateGroup" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnDonate" LargeImageSource="Resources\Donate.png" Label="捐赠" KeyTip="D" Click="BtnDonate_Click" ToolTip="非常感谢您的支持" ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                        <!--<RibbonGroup VerticalAlignment="Center" ContextMenu="{x:Null}">
                            <DockPanel LastChildFill="True">
                                <TextBlock DockPanel.Dock="Bottom">Settings File</TextBlock>
                                <TextBlock x:Name="tbSettingsName" FontSize="24" FontWeight="Bold" Foreground="DarkBlue" 
                                            Width="Auto" VerticalAlignment="Stretch" FontFamily="Verdana"
                                           Text="{Binding SettingsFileName}" ToolTip="{Binding SettingsFilePath}"
                                           />
                            </DockPanel>
                        </RibbonGroup>-->
                        <RibbonGroup x:Name="HelpGroup" ContextMenu="{x:Null}">
                            <RibbonButton x:Name="btnHelp" LargeImageSource="Resources\Help.png" Label="帮助" KeyTip="D" Click="btnHelp_Click" ToolTip="RoboCopy 官方帮助" ContextMenu="{x:Null}"/>
                        </RibbonGroup>
                    </RibbonTab>
                </Ribbon>

                <DockPanel
        HorizontalAlignment="Stretch"
        x:Name="dockPanel1"
        VerticalAlignment="Stretch"
        LastChildFill="True"
        FocusManager.FocusedElement="{Binding ElementName=txtFolder}">
                    <Grid
            Width="Auto"
            DockPanel.Dock="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Margin="5,5,5,0" Grid.Row="0" BorderThickness="1" BorderBrush="Gray" Background="LightSlateGray" >
                            <DockPanel LastChildFill="true">
                                <Label FontWeight="Bold" Foreground="{Binding ControlBackgroundBrush}" Content="任务文件："/>
                                <TextBlock Foreground="{Binding ControlBackgroundBrush}" VerticalAlignment="Center" Text="{Binding SettingsFileName}" ToolTip="{Binding SettingsFilePath}"></TextBlock>
                                
                            </DockPanel>
                        </Border>

                        <GroupBox
                    x:Name="grpFolders"
                Margin="5"
                Height="Auto" Grid.Row="1"
                Grid.Column="0"
                >
                            <GroupBox.Header>
                                <DockPanel LastChildFill="True">
                                    <Button x:Name="btnSwapDir" DockPanel.Dock="Right" Content="互换目录" 
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro" Click="btnSwapDir_Click"
                                    Style="{DynamicResource MetroButton}" />
                                    <TextBlock Text="选择文件夹" VerticalAlignment="Center"
                                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                                        xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding Mode="OneWay" Path="(Controls:GroupBoxHelper.HeaderForeground)" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DockPanel>
                            </GroupBox.Header>

                            <Grid
                    Width="Auto"
                    Height="Auto"
                        >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35*" />
                                    <ColumnDefinition Width="145*"/>
                                    <ColumnDefinition Width="368*"/>
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label FontWeight="Bold" Grid.Row="0" Grid.ColumnSpan="2" Content="源目录"/>
                                <TextBox 
                        x:Name="txtSourceDirectory"
                        VerticalAlignment="Stretch"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="1"
                        TabIndex="0" Grid.ColumnSpan="3" 
                        Style="{StaticResource WaterMarkTextBoxStyle}" 
                        ToolTip="{Binding Path=SourceDirTooltip}"
                            Text="{Binding Path=AppSettings.SourceDirectory, UpdateSourceTrigger=PropertyChanged}"
                                    Background="{Binding SourceDirStatus, Converter={StaticResource BoolToBackgroundColorConverter1}}"
                                    Foreground="{Binding SourceDirStatus, Converter={StaticResource BoolToForegroundColorConverter1}}"
                        >
                                </TextBox>
                                <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="1,0,1,2"
                        x:Name="btnSourceDirBrowse"
                        Click="btnSourceDirBrowse_Click"
                        TabIndex="1" ToolTip="选择源目录..." VerticalAlignment="Bottom">
                                    <Image Source="Resources/OpenFolder.png" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                                <Label FontWeight="Bold" Grid.Row="2" Grid.ColumnSpan="2" Content="目标目录"/>
                                <TextBox
                        x:Name="txtDestDirectory" 
                        Grid.Row="3" 
                        Grid.Column="0"
                        Margin="1"
                        TabIndex="2" Grid.ColumnSpan="3" 
                        Style="{StaticResource WaterMarkTextBoxStyle}"
                        ToolTip="目标目录"
                            Text="{Binding Path=AppSettings.DestDirectory, UpdateSourceTrigger=PropertyChanged}"
                                    Background="{Binding DestDirStatus, Converter={StaticResource BoolToBackgroundColorConverter1}}"
                                    Foreground="{Binding DestDirStatus, Converter={StaticResource BoolToForegroundColorConverter1}}"
                            />
                                <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Grid.Row="3"
                        Grid.Column="3"
                        Margin="1,2,1,1"
                        x:Name="btnDestDirBrowse"
                        TabIndex="3" ToolTip="选择目标目录..."
                                Click="btnDestDirBrowse_Click" >
                                    <Image Source="Resources/OpenFolder.png" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Grid
            Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                    Height="100"
                    MinHeight="100" />
                            <RowDefinition
                    Height="Auto" />
                            <RowDefinition
                    Height="*"
                    MinHeight="100" />
                        </Grid.RowDefinitions>
                        <GroupBox
                            Margin="5,0,5,0"
                            Grid.Row="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <GroupBox.Header>
                                <DockPanel LastChildFill="True">
                                    <CheckBox DockPanel.Dock="Right" Content="测试运行" IsChecked="{Binding Path=AppSettings.ListOnly}"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        Style="{DynamicResource MetroCheckBox}">
                                        <CheckBox.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding Mode="OneWay" Path="(Controls:GroupBoxHelper.HeaderForeground)" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </CheckBox.Foreground>
                                    </CheckBox>
                                    <TextBlock Text="ROBOCOPY 命令" VerticalAlignment="Center"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding Mode="OneWay" Path="(Controls:GroupBoxHelper.HeaderForeground)" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DockPanel>
                            </GroupBox.Header>

                            <DockPanel LastChildFill="True">
                                <TextBox Visibility="Collapsed"
                                Margin="0,3,0,2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Name="txtRoboCopyCmdEx"
                                TabIndex="24" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" 
                                         IsReadOnly="True" 
                                         />
                                <TextBox
                                    Margin="0,3,0,2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Name="txtRoboCopyCmd"
                                    TabIndex="24" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" 
                                    IsReadOnly="True"  />
                            </DockPanel>
                        </GroupBox>
                        <GridSplitter
                Margin="5,5,5,0"
                ResizeDirection="Rows"
                Grid.Row="1"
                Height="1"
                HorizontalAlignment="Stretch" IsTabStop="False" />
                        <GroupBox
                Margin="5,0,5,5"
                Grid.Row="2"
                VerticalAlignment="Stretch">
                            <GroupBox.Header>
                                <DockPanel LastChildFill="True">
                                    <CheckBox DockPanel.Dock="Right" Content="显示行号" IsChecked="{Binding Path=AppSettings.ShowOutputLineNumbers}"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                                        Style="{DynamicResource MetroCheckBox}">
                                        <CheckBox.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding Mode="OneWay" Path="(Controls:GroupBoxHelper.HeaderForeground)" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </CheckBox.Foreground>
                                    </CheckBox>
                                    <TextBlock Text="输出" VerticalAlignment="Center"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro">
                                        <TextBlock.Foreground>
                                            <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                                <Binding Mode="OneWay" Path="(Controls:GroupBoxHelper.HeaderForeground)" RelativeSource="{RelativeSource AncestorType=GroupBox}" />
                                            </MultiBinding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DockPanel>
                            </GroupBox.Header>
                            <avalonEdit:TextEditor
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        Name="txtStatus"
                        FontFamily="Courier New"
                        SyntaxHighlighting="DOS"
                        FontSize="10pt"
                        IsReadOnly="true" 
                        TabIndex="25" 
                        ShowLineNumbers="{Binding Path=AppSettings.ShowOutputLineNumbers}"
                        VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                Background="{Binding ControlBackgroundBrush}"
                                Foreground="{Binding ControlForegroundBrush}"
                                />
                            <!--TextBox
                    Margin="0,3,0,2"
                    VerticalAlignment="Stretch"
                    x:Name="txtStatus"
                    IsReadOnly="True"
                    TabIndex="25" FontFamily="Courier New" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" /-->
                        </GroupBox>
                    </Grid>
                </DockPanel>

            </DockPanel>
            <Expander Grid.Column="2" ExpandDirection="Left" IsExpanded="True" x:Name="expControlPanel"
                      ContextMenu="{StaticResource expControlPanelContextMenu}">
                <Expander.Header>
                    <TextBlock Text="控制面板" Foreground="White" FontWeight="Bold">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>

                <TabControl TabStripPlacement="Bottom" Grid.Column="2" x:Name="tabControlPanel" >
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter TextBlock.FontWeight="Bold" Content="{TemplateBinding Content}">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="0" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="RoboCopy 选项" ToolTip="" x:Name="tabRoboCopyOptionsItem" >
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" x:Name="txtPropertyGridWaterMark" FontSize="20" TextWrapping="WrapWithOverflow" FontWeight="Bold" 
                                       Foreground="Red" Text="{Binding PropertyGridTooltip}" ToolTip="{Binding PropertyGridTooltip}"
                                        Visibility="Collapsed" />
                            <local:ExtendedPropertyGrid  Margin="-3" VerticalAlignment="Stretch" x:Name="pgAppSettings" 
                                                    SelectedObject="{Binding AppSettings}" SelectedObjectName="" ShowTitle="False" 
                                           ShowDescriptionByTooltip="True" FilterWatermark="{Binding PropertyGridTooltip}" 
                                                         ToolTip="{Binding PropertyGridTooltip}"/>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="备份任务" x:Name="tabBackupTasks" ToolTip="" >
                        <GroupBox Header="备份任务" Margin="-3" x:Name="grpBackupTasks">
                            <DockPanel LastChildFill="True">
                                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                                    <TextBlock DockPanel.Dock="Top" FontWeight="Bold" Text="目录"/>
                                    <DockPanel LastChildFill="True" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
                                        <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Height="20"  Width="20" DockPanel.Dock="Right"
                                            x:Name="btnFindBackupTaskDirectoryInFileExplorer" 
                                                ToolTip="在资源管理器中查找备份任务目录" 
                                                VerticalAlignment="Center"
                                                Click="btnFindBackupTaskDirectoryInFileExplorer_Click" 
                                                IsEnabled="{Binding BackupTaskDirStatus}">
                                            <Image Source="{iconPacks:FontAwesomeImage Kind=SearchSolid}" >
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Width="20" DockPanel.Dock="Right"
                                            Margin="1,0,1,2"
                                            x:Name="btnRefreshBackupTasks"
                                            ToolTip="重新载入备份任务..." VerticalAlignment="Bottom"
                                                Click="btnRefreshBackupTasks_Click"
                                                IsEnabled="{Binding BackupTaskDirStatus}"
                                                >
                                            <Image Source="Resources/Refresh.png" >
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  Width="20" DockPanel.Dock="Right"
                                            Margin="1,0,1,2"
                                            x:Name="btnBackupTaskDirectory"
                                            ToolTip="选择备份任务文件目录..." VerticalAlignment="Bottom"
                                                Click="btnBackupTaskDirectory_Click"
                                                >
                                            <Image Source="Resources/OpenFolder.png" >
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                        <TextBox HorizontalAlignment="Stretch"
                                            x:Name="txtBackupTasksDirectory"
                                            Margin="1"
                                            TabIndex="0" 
                                            Style="{StaticResource WaterMarkTextBoxStyle}" 
                                            ToolTip="{Binding BackupTaskDirTooltip}"
                                                Text="{Binding Path=BackupTaskDirectory, UpdateSourceTrigger=PropertyChanged}"
                                                        Background="{Binding BackupTaskDirStatus, Converter={StaticResource BoolToBackgroundColorConverter1}}"
                                                        Foreground="{Binding BackupTaskDirStatus, Converter={StaticResource BoolToForegroundColorConverter1}}"
                                            >
                                        </TextBox>
                                    </DockPanel>
                                </DockPanel>

                                <DockPanel LastChildFill="True">
                                    <DockPanel LastChildFill="True" DockPanel.Dock="Bottom">
                                        <StackPanel Margin="0,5,0,0" Orientation="Vertical" DockPanel.Dock="Right" VerticalAlignment="Bottom" >
                                            <Button Margin="5,0,0,0" x:Name="btnCloneTask" DockPanel.Dock="Right" Content="克隆" IsEnabled="{Binding CloneTaskEnabled }"
                                                Style="{DynamicResource MetroButton}" Click="btnCloneTask_Click" 
                                                    ToolTip="克隆任务"/>
                                            <Button Margin="5,5,0,0" x:Name="btnDeleteTask" DockPanel.Dock="Right" Content="删除" IsEnabled="{Binding DeleteTaskEnabled }"
                                                Style="{DynamicResource MetroButton}" Click="btnDeleteTask_Click" ToolTip="删除任务"/>
                                        </StackPanel>
                                        <DockPanel LastChildFill="True">
                                            <TextBlock DockPanel.Dock="Top" FontWeight="Bold" Text="备注"/>
                                            <TextBox x:Name="txtTaskComments" Margin="0,5,0,0" Height="55" VerticalScrollBarVisibility="Auto" 
                                                     TextWrapping="WrapWithOverflow"
                                                     Text="{Binding Path=AppSettings.Comments, UpdateSourceTrigger=PropertyChanged}" ToolTip="备份任务备注" />
                                        </DockPanel>
                                    </DockPanel>
                                    <ListView x:Name="lstBackupTasks" Margin="0,5,0,0" BorderThickness="1" BorderBrush="LightGray" VerticalAlignment="Stretch"
                                             ItemsSource="{Binding BackupTaskInfos}" SelectedValuePath="FilePath" DisplayMemberPath="FileName" 
                                             SelectedValue="{Binding SelectedBackupTaskFilePath}"
                                             SelectedItem="{Binding SelectedBackupTaskItem}"
                                             local:ChoGridViewSort.AutoSort="True" 
                                             local:ChoGridViewColumnVisibilityManager.Enabled="True"
                                             FontFamily="Courier New" FontSize="12" ToolTip=""
                                               PreviewKeyUp="mnuDeleteTask_PreviewKeyUp">
                                        <ListView.Resources>
                                            <ContextMenu x:Key="grdHeaderContextMenu">
                                                <MenuItem x:Name="mnuDateCreated" Header="创建日期" IsCheckable="true" IsChecked="{Binding DateCreated}" />
                                                <MenuItem x:Name="mnuDateModified" Header="修改日期" IsCheckable="true" IsChecked="{Binding DateModified}" />
                                                <Separator />
                                                <MenuItem Header="Clone Options">
                                                    <MenuItem Header="Keep Date Created" IsCheckable="true" IsChecked="{Binding KeepDateCreated}"/>
                                                    <MenuItem Header="Keep Date Modified" IsCheckable="true" IsChecked="{Binding KeepDateModified}" />
                                                </MenuItem>
                                                <Separator />
                                                <MenuItem x:Name="mnuColumnToFit" Header="调整列宽" Click="mnuColumnToFit_Click" />
                                                <MenuItem x:Name="mnuAllColumnsToFit" Header="调整所有列宽" Click="mnuAllColumnsToFit_Click" />
                                                <Separator />
                                                <MenuItem Header="Confirm on Delete Task" IsCheckable="True" IsChecked="{Binding ConfirmOnDelete}" />
                                                <MenuItem Header="Watch for Changes" IsCheckable="True" IsChecked="{Binding WatchForChanges}" />
                                            </ContextMenu>
                                            <ContextMenu x:Key="grdItemContextMenu">
                                                <MenuItem x:Name="mnuCloneTask" Header="克隆任务" Click="mnuCloneTask_Click" InputGestureText="Ctrl+V" />
                                                <MenuItem x:Name="mnuDeleteTask" Header="删除任务" Click="mnuDeleteTask_Click" 
                                                          InputGestureText="Del" />
                                                <Separator />
                                                <MenuItem Header="Clone Options">
                                                    <MenuItem Header="Keep Date Created" IsCheckable="true" IsChecked="{Binding KeepDateCreated, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                                    <MenuItem Header="Keep Date Modified" IsCheckable="true" IsChecked="{Binding KeepDateModified, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                                </MenuItem>
                                                <Separator />
                                                <MenuItem Header="Confirm on Delete Task" IsCheckable="True" IsChecked="{Binding ConfirmOnDelete, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                                <MenuItem Header="Watch for Changes" IsCheckable="True" IsChecked="{Binding WatchForChanges, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            </ContextMenu>
                                        </ListView.Resources>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnListViewItem_PreviewMouseLeftButtonDown" />-->
                                                <Setter Property="ContextMenu" Value="{StaticResource grdItemContextMenu}"/>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.View>
                                            <GridView AllowsColumnReorder="true" ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle1}">
                                                <GridViewColumn x:Name="grdTaskNameColumn" Width="{Binding TaskNameColumnWidth}" DisplayMemberBinding="{Binding Path=TaskName}" 
                                                                local:ChoGridViewSort.PropertyName="TaskName" >
                                                    <GridViewColumnHeader x:Name="grdTaskNameColumnHeader" Content="任务名称" ContextMenu="{StaticResource grdHeaderContextMenu}" 
                                                                          SizeChanged="TaskNameGridViewColumnHeader_SizeChanged" Tag="TaskName"
                                                                          MouseDown="GridViewColumnHeader_MouseDown" Click="grdTaskNameColumnHeader_Click" />
                                                </GridViewColumn>
                                                <GridViewColumn x:Name="grdDateCreatedColumn" Width="{Binding DateCreatedColumnWidth}" 
                                                                DisplayMemberBinding="{Binding Path=CreatedDate, StringFormat='yyyy-mm-dd hh:mm:ss tt'}" 
                                                                local:ChoGridViewSort.PropertyName="CreatedDate" 
                                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding DateCreated}">
                                                    <GridViewColumnHeader x:Name="grddDateCreatedColumnHeader" Content="创建日期" ContextMenu="{StaticResource grdHeaderContextMenu}" 
                                                                          SizeChanged="DateCreatedGridViewColumnHeader_SizeChanged" Tag="CreatedDate"
                                                                          MouseDown="GridViewColumnHeader_MouseDown" Click="grddDateCreatedColumnHeader_Click" />
                                                </GridViewColumn>
                                                <GridViewColumn x:Name="grdDateModifiedColumn" Width="{Binding DateModifiedColumnWidth}" 
                                                                DisplayMemberBinding="{Binding Path=ModifiedDate, StringFormat='yyyy-mm-dd hh:mm:ss tt'}" 
                                                                local:ChoGridViewSort.PropertyName="ModifiedDate" 
                                                                local:ChoGridViewColumnVisibilityManager.IsVisible="{Binding DateModified}" >
                                                    <GridViewColumnHeader x:Name="grddDateModifiedColumnHeader" Content="修改日期" ContextMenu="{StaticResource grdHeaderContextMenu}" 
                                                                          SizeChanged="DateModifiedGridViewColumnHeader_SizeChanged" Tag="ModifiedDate"
                                                                          MouseDown="GridViewColumnHeader_MouseDown" Click="grddDateModifiedColumnHeader_Click"/>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>

                                    <!--<ListBox x:Name="lstBackupTasks" Margin="0,5,0,0" BorderThickness="1" BorderBrush="LightGray" VerticalAlignment="Stretch"
                                             ItemsSource="{Binding BackupTaskInfos}" SelectedValuePath="FilePath" DisplayMemberPath="FileName" 
                                             SelectedValue="{Binding SelectedBackupTaskFilePath}" >-->
                                </DockPanel>
                            </DockPanel>
                        </GroupBox>
                    </TabItem>
                </TabControl>
            </Expander>

            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Right" VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext" IsTabStop="False" 
                          ResizeDirection="Columns" Background="{Binding ControlBackgroundBrush}" />
        </Grid>
    </DockPanel>
</Controls:MetroWindow>
